#include "clf/ModelExceptions.hpp"

using namespace clf::exceptions;

ModelHasWrongInputOutputDimensions::ModelHasWrongInputOutputDimensions(Type const& type, Function const& func, std::size_t const givendim, std::size_t const dim) : CLFException(), type(type), func(func), givendim(givendim), dim(dim) {
  if( func==Function::RHS ) {
    WrongRHSDimensions();
  } else if( func==Function::OPERATOR ) {
    WrongOperatorDimensions();
  }
}

void ModelHasWrongInputOutputDimensions::WrongOperatorDimensions() {
  if( type==Type::INPUT ) {
    if( dim==1 ) {
      message = "ERROR: clf::Model::Operator was called with a " + std::to_string(givendim) + "-dimensional vector but requires " + std::to_string(dim) + " dimension.";
    } else {
      message = "ERROR: clf::Model::Operator was called with a " + std::to_string(givendim) + "-dimensional vector but requires " + std::to_string(dim) + " dimensions.";
    }
  } else {
    if( dim==1 ) {
      message = "ERROR: clf::Model::Operator returned a " + std::to_string(givendim) + "-dimensional vector but required " + std::to_string(dim) + " dimension.";
    } else {
      message = "ERROR: clf::Model::Operator returned a " + std::to_string(givendim) + "-dimensional vector but required " + std::to_string(dim) + " dimensions.";
    }
  }
}

void ModelHasWrongInputOutputDimensions::WrongRHSDimensions() {
  if( type==Type::INPUT ) {
    if( dim==1 ) {
      message = "ERROR: clf::Model::RightHandSide was called with a " + std::to_string(givendim) + "-dimensional vector but requires " + std::to_string(dim) + " dimension.";
    } else {
      message = "ERROR: clf::Model::RightHandSide was called with a " + std::to_string(givendim) + "-dimensional vector but requires " + std::to_string(dim) + " dimensions.";
    }
  } else {
    if( dim==1 ) {
      message = "ERROR: clf::Model::RightHandSide returned a " + std::to_string(givendim) + "-dimensional vector but required " + std::to_string(dim) + " dimension.";
    } else {
      message = "ERROR: clf::Model::RightHandSide returned a " + std::to_string(givendim) + "-dimensional vector but required " + std::to_string(dim) + " dimensions.";
    }
  }
}

ModelHasNotImplemented::ModelHasNotImplemented(Type const& type, Function const& func) : CLFException(), type(type), func(func) {
  if( func==Function::RHS ) {
    message = "ERROR: clf::Model has not implemented the right hand side function";
  } else if( func==Function::OPERATOR) {
    message = "ERROR: clf::Model has not implemented the operator";
  } else {
    message = "ERROR: clf::Model has not implemented something";
  }

  if( type==Type::VECTOR ) {
    message += ". Error generated by vector-valued implementation call";
  } else if( type==Type::COMPONENT ) {
    message += ". Error generated by component-wise implementation call";
  }
  message += " (clf::exceptions::ModelHasNotImplemented).";
}
